/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.fretron.Model;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class EnrichedTransporterCommand extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"EnrichedTransporterCommand\",\"namespace\":\"com.fretron.Model\",\"fields\":[{\"name\":\"command\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Command\",\"fields\":[{\"name\":\"type\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"data\",\"type\":[\"null\",\"bytes\"]},{\"name\":\"id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"statusCode\",\"type\":[\"null\",\"int\"]},{\"name\":\"errorMessage\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"startTime\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"processTime\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"}]}],\"default\":null},{\"name\":\"lane\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Lane\",\"fields\":[{\"name\":\"uuid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"transporterId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"type\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"baseOrigin\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"FreightLocation\",\"fields\":[{\"name\":\"name\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"default\":null},{\"name\":\"geofence\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Geofence\",\"fields\":[{\"name\":\"center\",\"type\":{\"type\":\"record\",\"name\":\"Location\",\"fields\":[{\"name\":\"latitude\",\"type\":\"double\"},{\"name\":\"longitude\",\"type\":\"double\"}]}},{\"name\":\"boundary\",\"type\":{\"type\":\"array\",\"items\":\"Location\"}}]}],\"default\":null},{\"name\":\"material\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null}]}],\"default\":null},{\"name\":\"baseDestination\",\"type\":[\"null\",\"FreightLocation\"],\"default\":null},{\"name\":\"basePrice\",\"type\":[\"null\",\"double\"]},{\"name\":\"baseMaterial\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"consigner\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"FreightLocationOffset\",\"fields\":[{\"name\":\"freightLocation\",\"type\":\"FreightLocation\"},{\"name\":\"priceOffset\",\"type\":\"int\"},{\"name\":\"etdOffset\",\"type\":\"int\"}]}}],\"default\":null},{\"name\":\"consignee\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"FreightLocationOffset\"}],\"default\":null},{\"name\":\"material\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"MaterialOffset\",\"fields\":[{\"name\":\"material\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"materialPriceOffset\",\"type\":\"int\"}]}],\"default\":null},{\"name\":\"isDeleted\",\"type\":\"boolean\",\"default\":false}]}],\"default\":null},{\"name\":\"user\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"User\",\"fields\":[{\"name\":\"userId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"email\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"mobile\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"transporterId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"groupId\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"]},{\"name\":\"isDeleted\",\"type\":\"boolean\",\"default\":false}]}],\"default\":null},{\"name\":\"transporter\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Transporter\",\"fields\":[{\"name\":\"transporterId\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"]},{\"name\":\"adminEmail\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null},{\"name\":\"groups\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Groups\",\"fields\":[{\"name\":\"transporterId\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"]},{\"name\":\"groupId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"subgroups\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"Groups\"}]},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"admin\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]},{\"name\":\"members\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null}]}}],\"default\":null},{\"name\":\"isDeleted\",\"type\":\"boolean\",\"default\":false}]}],\"default\":null},{\"name\":\"group\",\"type\":[\"null\",\"Groups\"],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public com.fretron.Model.Command command;
  @Deprecated public com.fretron.Model.Lane lane;
  @Deprecated public com.fretron.Model.User user;
  @Deprecated public com.fretron.Model.Transporter transporter;
  @Deprecated public com.fretron.Model.Groups group;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public EnrichedTransporterCommand() {}

  /**
   * All-args constructor.
   */
  public EnrichedTransporterCommand(com.fretron.Model.Command command, com.fretron.Model.Lane lane, com.fretron.Model.User user, com.fretron.Model.Transporter transporter, com.fretron.Model.Groups group) {
    this.command = command;
    this.lane = lane;
    this.user = user;
    this.transporter = transporter;
    this.group = group;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return command;
    case 1: return lane;
    case 2: return user;
    case 3: return transporter;
    case 4: return group;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: command = (com.fretron.Model.Command)value$; break;
    case 1: lane = (com.fretron.Model.Lane)value$; break;
    case 2: user = (com.fretron.Model.User)value$; break;
    case 3: transporter = (com.fretron.Model.Transporter)value$; break;
    case 4: group = (com.fretron.Model.Groups)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'command' field.
   */
  public com.fretron.Model.Command getCommand() {
    return command;
  }

  /**
   * Sets the value of the 'command' field.
   * @param value the value to set.
   */
  public void setCommand(com.fretron.Model.Command value) {
    this.command = value;
  }

  /**
   * Gets the value of the 'lane' field.
   */
  public com.fretron.Model.Lane getLane() {
    return lane;
  }

  /**
   * Sets the value of the 'lane' field.
   * @param value the value to set.
   */
  public void setLane(com.fretron.Model.Lane value) {
    this.lane = value;
  }

  /**
   * Gets the value of the 'user' field.
   */
  public com.fretron.Model.User getUser() {
    return user;
  }

  /**
   * Sets the value of the 'user' field.
   * @param value the value to set.
   */
  public void setUser(com.fretron.Model.User value) {
    this.user = value;
  }

  /**
   * Gets the value of the 'transporter' field.
   */
  public com.fretron.Model.Transporter getTransporter() {
    return transporter;
  }

  /**
   * Sets the value of the 'transporter' field.
   * @param value the value to set.
   */
  public void setTransporter(com.fretron.Model.Transporter value) {
    this.transporter = value;
  }

  /**
   * Gets the value of the 'group' field.
   */
  public com.fretron.Model.Groups getGroup() {
    return group;
  }

  /**
   * Sets the value of the 'group' field.
   * @param value the value to set.
   */
  public void setGroup(com.fretron.Model.Groups value) {
    this.group = value;
  }

  /** Creates a new EnrichedTransporterCommand RecordBuilder */
  public static com.fretron.Model.EnrichedTransporterCommand.Builder newBuilder() {
    return new com.fretron.Model.EnrichedTransporterCommand.Builder();
  }
  
  /** Creates a new EnrichedTransporterCommand RecordBuilder by copying an existing Builder */
  public static com.fretron.Model.EnrichedTransporterCommand.Builder newBuilder(com.fretron.Model.EnrichedTransporterCommand.Builder other) {
    return new com.fretron.Model.EnrichedTransporterCommand.Builder(other);
  }
  
  /** Creates a new EnrichedTransporterCommand RecordBuilder by copying an existing EnrichedTransporterCommand instance */
  public static com.fretron.Model.EnrichedTransporterCommand.Builder newBuilder(com.fretron.Model.EnrichedTransporterCommand other) {
    return new com.fretron.Model.EnrichedTransporterCommand.Builder(other);
  }
  
  /**
   * RecordBuilder for EnrichedTransporterCommand instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<EnrichedTransporterCommand>
    implements org.apache.avro.data.RecordBuilder<EnrichedTransporterCommand> {

    private com.fretron.Model.Command command;
    private com.fretron.Model.Lane lane;
    private com.fretron.Model.User user;
    private com.fretron.Model.Transporter transporter;
    private com.fretron.Model.Groups group;

    /** Creates a new Builder */
    private Builder() {
      super(com.fretron.Model.EnrichedTransporterCommand.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.fretron.Model.EnrichedTransporterCommand.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.command)) {
        this.command = data().deepCopy(fields()[0].schema(), other.command);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.lane)) {
        this.lane = data().deepCopy(fields()[1].schema(), other.lane);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.user)) {
        this.user = data().deepCopy(fields()[2].schema(), other.user);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.transporter)) {
        this.transporter = data().deepCopy(fields()[3].schema(), other.transporter);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.group)) {
        this.group = data().deepCopy(fields()[4].schema(), other.group);
        fieldSetFlags()[4] = true;
      }
    }
    
    /** Creates a Builder by copying an existing EnrichedTransporterCommand instance */
    private Builder(com.fretron.Model.EnrichedTransporterCommand other) {
            super(com.fretron.Model.EnrichedTransporterCommand.SCHEMA$);
      if (isValidValue(fields()[0], other.command)) {
        this.command = data().deepCopy(fields()[0].schema(), other.command);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.lane)) {
        this.lane = data().deepCopy(fields()[1].schema(), other.lane);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.user)) {
        this.user = data().deepCopy(fields()[2].schema(), other.user);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.transporter)) {
        this.transporter = data().deepCopy(fields()[3].schema(), other.transporter);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.group)) {
        this.group = data().deepCopy(fields()[4].schema(), other.group);
        fieldSetFlags()[4] = true;
      }
    }

    /** Gets the value of the 'command' field */
    public com.fretron.Model.Command getCommand() {
      return command;
    }
    
    /** Sets the value of the 'command' field */
    public com.fretron.Model.EnrichedTransporterCommand.Builder setCommand(com.fretron.Model.Command value) {
      validate(fields()[0], value);
      this.command = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'command' field has been set */
    public boolean hasCommand() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'command' field */
    public com.fretron.Model.EnrichedTransporterCommand.Builder clearCommand() {
      command = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'lane' field */
    public com.fretron.Model.Lane getLane() {
      return lane;
    }
    
    /** Sets the value of the 'lane' field */
    public com.fretron.Model.EnrichedTransporterCommand.Builder setLane(com.fretron.Model.Lane value) {
      validate(fields()[1], value);
      this.lane = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'lane' field has been set */
    public boolean hasLane() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'lane' field */
    public com.fretron.Model.EnrichedTransporterCommand.Builder clearLane() {
      lane = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'user' field */
    public com.fretron.Model.User getUser() {
      return user;
    }
    
    /** Sets the value of the 'user' field */
    public com.fretron.Model.EnrichedTransporterCommand.Builder setUser(com.fretron.Model.User value) {
      validate(fields()[2], value);
      this.user = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'user' field has been set */
    public boolean hasUser() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'user' field */
    public com.fretron.Model.EnrichedTransporterCommand.Builder clearUser() {
      user = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'transporter' field */
    public com.fretron.Model.Transporter getTransporter() {
      return transporter;
    }
    
    /** Sets the value of the 'transporter' field */
    public com.fretron.Model.EnrichedTransporterCommand.Builder setTransporter(com.fretron.Model.Transporter value) {
      validate(fields()[3], value);
      this.transporter = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'transporter' field has been set */
    public boolean hasTransporter() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'transporter' field */
    public com.fretron.Model.EnrichedTransporterCommand.Builder clearTransporter() {
      transporter = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'group' field */
    public com.fretron.Model.Groups getGroup() {
      return group;
    }
    
    /** Sets the value of the 'group' field */
    public com.fretron.Model.EnrichedTransporterCommand.Builder setGroup(com.fretron.Model.Groups value) {
      validate(fields()[4], value);
      this.group = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'group' field has been set */
    public boolean hasGroup() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'group' field */
    public com.fretron.Model.EnrichedTransporterCommand.Builder clearGroup() {
      group = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    public EnrichedTransporterCommand build() {
      try {
        EnrichedTransporterCommand record = new EnrichedTransporterCommand();
        record.command = fieldSetFlags()[0] ? this.command : (com.fretron.Model.Command) defaultValue(fields()[0]);
        record.lane = fieldSetFlags()[1] ? this.lane : (com.fretron.Model.Lane) defaultValue(fields()[1]);
        record.user = fieldSetFlags()[2] ? this.user : (com.fretron.Model.User) defaultValue(fields()[2]);
        record.transporter = fieldSetFlags()[3] ? this.transporter : (com.fretron.Model.Transporter) defaultValue(fields()[3]);
        record.group = fieldSetFlags()[4] ? this.group : (com.fretron.Model.Groups) defaultValue(fields()[4]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
